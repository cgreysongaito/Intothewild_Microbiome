fill = LabRodent.Recip),
binwidth = 1) +
facet_grid (`Eco-Reality Taxon Match` ~ Type, scales = "free_x") +
#TODO: create shorter lables for the facet columns
theme(legend.position = "top") +
scale_fill_manual(name = "Recipient Taxon Type") +
ylab("Count")
df_Transplant %>%
dplyr::select(LabRodent.Recip, starts_with("Eco-Reality")) %>%
# select the relevant columns for the plotting function
gather(starts_with("Eco-Reality of"), key = "Type", value = "Eco-Reality") %>%
mutate(Type=str_remove(Type, "Eco-Reality of ")) %>%
mutate(Type=str_remove(Type, " \\(1-3\\)")) %>%
mutate(Type=str_remove(Type, " \\(1-5\\)")) %>%
mutate(Type=str_remove(Type, " \\(1-2\\)")) %>%
mutate(Type=str_replace(Type, " ", "\n"))%>%
# create the long format for ease of plotting
# not necessary to create individual figures (see code below)
mutate(`Eco-Reality` = as.numeric(`Eco-Reality`)) %>%
# this is probably only needed bc of the NAs from the new articles
#TODO rerun after all the data are added/verified
ggplot() +
geom_histogram(aes(x = `Eco-Reality`,
fill = LabRodent.Recip),
binwidth = 1) +
facet_grid (`Eco-Reality Taxon Match` ~ Type, scales = "free_x") +
#TODO: create shorter lables for the facet columns
theme(legend.position = "top") +
scale_fill_manual(name = "Recipient Taxon Type", values = c("LabRodent","Other")) +
ylab("Count")
df_Transplant %>%
dplyr::select(LabRodent.Recip, starts_with("Eco-Reality")) %>%
# select the relevant columns for the plotting function
gather(starts_with("Eco-Reality of"), key = "Type", value = "Eco-Reality") %>%
mutate(Type=str_remove(Type, "Eco-Reality of ")) %>%
mutate(Type=str_remove(Type, " \\(1-3\\)")) %>%
mutate(Type=str_remove(Type, " \\(1-5\\)")) %>%
mutate(Type=str_remove(Type, " \\(1-2\\)")) %>%
mutate(Type=str_replace(Type, " ", "\n"))%>%
# create the long format for ease of plotting
# not necessary to create individual figures (see code below)
mutate(`Eco-Reality` = as.numeric(`Eco-Reality`)) %>%
# this is probably only needed bc of the NAs from the new articles
#TODO rerun after all the data are added/verified
ggplot() +
geom_histogram(aes(x = `Eco-Reality`,
fill = LabRodent.Recip),
binwidth = 1) +
facet_grid (`Eco-Reality Taxon Match` ~ Type, scales = "free_x") +
#TODO: create shorter lables for the facet columns
theme(legend.position = "top") +
scale_fill_viridis(name="Recipient Taxon Type", breaks=c("LabRodent","Other"),labels=c("Lab Rodent", "Other"), alpha = 1, begin = 0, end = 1, direction = 1, discrete = TRUE, option = "D")+
#scale_fill_manual(name = "Recipient Taxon Type", values = c("LabRodent","Other")) +
ylab("Count")
df_Transplant = gs_url("https://docs.google.com/spreadsheets/d/1WhRjoIFJWAAGvsFNHbrf2GZp8K6pNtxoudrhZ6h82ZM/edit") %>%
# create unique identifyer
gs_read()  %>%
# reads the data into R
write_csv(paste(Sys.Date(),"Microbiome_Literature_Summaries.csv"))
theme_simple <- function () {
theme_grey() %+replace%
theme(
axis.line=element_line(colour="black"),
panel.grid.minor=element_blank(),
panel.grid.major=element_blank(),
panel.background=element_blank(),
axis.title=element_text(size=28,face="bold"),
axis.text.x=element_text(size=24, colour="Black"),
axis.text.y=element_text(size=24, colour="Black"),
axis.ticks.length=unit(0.5,"cm"),
axis.ticks=element_line(size=0.5, colour="Black"),
panel.border=element_rect(fill=FALSE,size=0.5),
legend.title=element_text(size=15),
legend.key=element_blank()
)
}
library("tidyverse"); theme_set(theme_simple())
library(viridis)
library(googlesheets)
df_Transplant = gs_url("https://docs.google.com/spreadsheets/d/1WhRjoIFJWAAGvsFNHbrf2GZp8K6pNtxoudrhZ6h82ZM/edit") %>%
# create unique identifyer
gs_read()  %>%
# reads the data into R
write_csv(paste(Sys.Date(),"Microbiome_Literature_Summaries.csv"))
attr(df_Transplant, "CreatedOn") = Sys.Date()
# add the same date as an attribute to the R object
glimpse(df_Transplant)
str(df_Transplant) # check last line for date attribute
labrodents <- c("Mice", "mice", "mouse", "rat", "rats" )
recipients = tibble(`Recipient Taxon` = recipients) %>%
mutate(LabRodent.Recip = ifelse(`Recipient Taxon` %in% labrodents, "LabRodent","Other"))
recipients = df_Transplant %>%
dplyr::select(`Recipient Taxon`) %>%
unique() %>%
arrange(`Recipient Taxon`) %>%
pull()
recipients # check which are rodents
labrodents <- c("Mice", "mice", "mouse", "rat", "rats" )
recipients = tibble(`Recipient Taxon` = recipients) %>%
mutate(LabRodent.Recip = ifelse(`Recipient Taxon` %in% labrodents, "LabRodent","Other"))
## create new column with lookup table and left_join
df_Transplant = left_join(df_Transplant, recipients, by = "Recipient Taxon")
df_Transplant %>%
dplyr::select(`Recipient Taxon`, LabRodent.Recip) %>%
View()
df_Transplant %>%
dplyr::select(LabRodent.Recip, starts_with("Eco-Reality")) %>%
# select the relevant columns for the plotting function
gather(starts_with("Eco-Reality of"), key = "Type", value = "Eco-Reality") %>%
mutate(Type=str_remove(Type, "Eco-Reality of ")) %>%
mutate(Type=str_remove(Type, " \\(1-3\\)")) %>%
mutate(Type=str_remove(Type, " \\(1-5\\)")) %>%
mutate(Type=str_remove(Type, " \\(1-2\\)")) %>%
mutate(Type=str_replace(Type, " ", "\n"))%>%
# create the long format for ease of plotting
# not necessary to create individual figures (see code below)
mutate(`Eco-Reality` = as.numeric(`Eco-Reality`)) %>%
# this is probably only needed bc of the NAs from the new articles
#TODO rerun after all the data are added/verified
ggplot() +
geom_histogram(aes(x = `Eco-Reality`,
fill = LabRodent.Recip),
binwidth = 1) +
facet_grid (`Eco-Reality Taxon Match` ~ Type, scales = "free_x") +
#TODO: create shorter lables for the facet columns
theme(legend.position = "top") +
scale_fill_viridis(name="Recipient Taxon Type", breaks=c("LabRodent","Other"),labels=c("Lab Rodent", "Other"), alpha = 1, begin = 0, end = 1, direction = 1, discrete = TRUE, option = "D")+
#scale_fill_manual(name = "Recipient Taxon Type", values = c("LabRodent","Other")) +
ylab("Count")
theme_simple <- function () {
theme_grey() %+replace%
theme(
axis.line=element_line(colour="black"),
panel.grid.minor=element_blank(),
panel.grid.major=element_blank(),
panel.background=element_blank(),
axis.title=element_text(size=28,face="bold"),
axis.text.x=element_text(size=24, colour="Black"),
axis.text.y=element_text(size=24, colour="Black"),
axis.ticks.length=unit(0.5,"cm"),
axis.ticks=element_line(size=0.5, colour="Black"),
panel.border=element_rect(fill=FALSE,size=0.5),
legend.title=element_text(size=15),
legend.key=element_blank()
)
}
library("tidyverse"); theme_set(theme_simple())
library(viridis)
library(googlesheets)
wd
getwd
getwd()
theme_simple <- function () {
theme_grey() %+replace%
theme(
axis.line=element_line(colour="black"),
panel.grid.minor=element_blank(),
panel.grid.major=element_blank(),
panel.background=element_blank(),
axis.title=element_text(size=28,face="bold"),
axis.text.x=element_text(size=24, colour="Black"),
axis.text.y=element_text(size=24, colour="Black"),
axis.ticks.length=unit(0.5,"cm"),
axis.ticks=element_line(size=0.5, colour="Black"),
panel.border=element_rect(fill=FALSE,size=0.5),
legend.title=element_text(size=15),
legend.key=element_blank()
)
}
library("tidyverse"); theme_set(theme_simple())
library(viridis)
library(googlesheets)
df_Transplant = gs_url("https://docs.google.com/spreadsheets/d/1WhRjoIFJWAAGvsFNHbrf2GZp8K6pNtxoudrhZ6h82ZM/edit") %>%
# create unique identifyer
gs_read()  %>%
# reads the data into R
write_csv(paste(Sys.Date(),"Microbiome_Literature_Summaries.csv"))
attr(df_Transplant, "CreatedOn") = Sys.Date()
recipients = df_Transplant %>%
dplyr::select(`Recipient Taxon`) %>%
unique() %>%
arrange(`Recipient Taxon`) %>%
pull()
labrodents <- c("Mice", "mice", "mouse", "rat", "rats" )
recipients = tibble(`Recipient Taxon` = recipients) %>%
mutate(LabRodent.Recip = ifelse(`Recipient Taxon` %in% labrodents, "LabRodent","Other"))
## create new column with lookup table and left_join
df_Transplant = left_join(df_Transplant, recipients, by = "Recipient Taxon")
df_Transplant %>%
dplyr::select(`Recipient Taxon`, LabRodent.Recip) %>%
View()
df_Transplant %>%
dplyr::select(LabRodent.Recip, starts_with("Eco-Reality")) %>%
# select the relevant columns for the plotting function
gather(starts_with("Eco-Reality of"), key = "Type", value = "Eco-Reality") %>%
mutate(Type=str_remove(Type, "Eco-Reality of ")) %>%
mutate(Type=str_remove(Type, " \\(1-3\\)")) %>%
mutate(Type=str_remove(Type, " \\(1-5\\)")) %>%
mutate(Type=str_remove(Type, " \\(1-2\\)")) %>%
mutate(Type=str_replace(Type, " ", "\n"))%>%
# create the long format for ease of plotting
# not necessary to create individual figures (see code below)
mutate(`Eco-Reality` = as.numeric(`Eco-Reality`)) %>%
# this is probably only needed bc of the NAs from the new articles
#TODO rerun after all the data are added/verified
ggplot() +
geom_histogram(aes(x = `Eco-Reality`,
fill = LabRodent.Recip),
binwidth = 1) +
facet_grid (`Eco-Reality Taxon Match` ~ Type, scales = "free_x") +
#TODO: create shorter lables for the facet columns
theme(legend.position = "top") +
scale_fill_viridis(name="Recipient Taxon Type", breaks=c("LabRodent","Other"),labels=c("Lab Rodent", "Other"), alpha = 1, begin = 0, end = 1, direction = 1, discrete = TRUE, option = "D")+
#scale_fill_manual(name = "Recipient Taxon Type", values = c("LabRodent","Other")) +
ylab("Count")
ggsave(paste(Sys.Date(),"Eco-realityComparisons.pdf"),
width = 25, height = 10, units = "cm")
theme_simple <- function() {
theme_grey() %+replace%
theme(
axis.line = element_line(colour = "black"),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank(),
axis.title = element_text(size = 28, face = "bold"),
axis.text.x = element_text(size = 24, colour = "Black"),
axis.text.y = element_text(size = 24, colour = "Black"),
axis.ticks.length = unit(0.5, "cm"),
axis.ticks = element_line(size = 0.5, colour = "Black"),
panel.border = element_rect(fill = FALSE, size = 0.5),
legend.title = element_text(size = 15),
legend.key = element_blank()
)
}
library("tidyverse")
theme_set(theme_simple())
library(viridis)
library(googlesheets)
# + scale_color/fill_viridis(discrete = T/F)
# theme_set(theme_light())
# Startup ends here
## Read in data -----
df_Transplant <- gs_url("https://docs.google.com/spreadsheets/d/1WhRjoIFJWAAGvsFNHbrf2GZp8K6pNtxoudrhZ6h82ZM/edit") %>%
# create unique identifyer
gs_read() %>%
# reads the data into R
write_csv(paste(Sys.Date(), "Microbiome_Literature_Summaries.csv"))
# and automatically create timestamped .csv for safety and repeatability
## execute line below if you want to repeat analysis from a certain date
# df_Transplant = read_csv("2018-11-20 Microbiome_Literature_Summaries.csv")
attr(df_Transplant, "CreatedOn") <- Sys.Date()
# add the same date as an attribute to the R object
glimpse(df_Transplant)
str(df_Transplant) # check last line for date attribute
## Data wrangling -----
summary(df_Transplant)
## create lookup table more programmatically
recipients <- df_Transplant %>%
dplyr::select(`Recipient Taxon`) %>%
unique() %>%
arrange(`Recipient Taxon`) %>%
pull()
recipients # check which are rodents
labrodents <- c("Mice", "mice", "mouse", "rat", "rats")
recipients <- tibble(`Recipient Taxon` = recipients) %>%
mutate(LabRodent.Recip = ifelse(`Recipient Taxon` %in% labrodents, "LabRodent", "Other"))
recipients %>% View()
# TODO: after new import, check the above line if new recipient were added
# TODO: if necessary, adjust labrodent vector
## create new column with lookup table and left_join
df_Transplant <- left_join(df_Transplant, recipients, by = "Recipient Taxon")
df_Transplant %>%
dplyr::select(`Recipient Taxon`, LabRodent.Recip) %>%
View()
df_Transplant %>%
dplyr::select(LabRodent.Recip, starts_with("Eco-Reality")) %>%
# select the relevant columns for the plotting function
gather(starts_with("Eco-Reality of"), key = "Type", value = "Eco-Reality") %>%
mutate(Type = str_remove(Type, "Eco-Reality of ")) %>%
mutate(Type = str_remove(Type, " \\(1-3\\)")) %>%
mutate(Type = str_remove(Type, " \\(1-5\\)")) %>%
mutate(Type = str_remove(Type, " \\(1-2\\)")) %>%
mutate(Type = str_replace(Type, " ", "\n")) %>%
# create the long format for ease of plotting
# not necessary to create individual figures (see code below)
mutate(`Eco-Reality` = as.numeric(`Eco-Reality`),
Type = factor(Type,levels=c("Donor\nEnvironment","Donor\nPhysiology","Transplanted\nMicrobiome","Transplant\nMethod","Recipient\nMicrobiome","Recipient\nEnvironment","Recipient\nPhysiology","Housing\nMethod")))  %>%
# this is needed bc of the NAs and NS from the new articles
# TODO rerun after all the data are added/verified
ggplot() +
geom_bar(aes(x = `Eco-Reality`,
fill = LabRodent.Recip)) +
facet_grid (`Eco-Reality Taxon Match` ~ Type, scales = "free_x",space = "free_x") +
theme(legend.position = "top") +
scale_fill_viridis(
name = "Recipient Taxon Type", breaks = c("LabRodent", "Other"),
labels = c("Lab Rodent", "Other"), alpha = 1, begin = 0, end = 1,
direction = 1, discrete = TRUE, option = "D"
) +
# scale_fill_manual(name = "Recipient Taxon Type", values = c("LabRodent","Other")) +
scale_x_continuous(breaks = function(x) pretty(x)[pretty(x) %% 1 == 0]) +
# https://stackoverflow.com/questions/15622001/how-to-display-only-integer-values-on-an-axis-using-ggplot2
ylab("Count")
df_Transplant %>%
dplyr::select(LabRodent.Recip, starts_with("Eco-Reality")) %>%
# select the relevant columns for the plotting function
gather(starts_with("Eco-Reality of"), key = "Type", value = "Eco-Reality") %>%
mutate(Type = str_remove(Type, "Eco-Reality of ")) %>%
mutate(Type = str_remove(Type, " \\(1-3\\)")) %>%
mutate(Type = str_remove(Type, " \\(1-5\\)")) %>%
mutate(Type = str_remove(Type, " \\(1-2\\)")) %>%
mutate(Type = str_replace(Type, " ", "\n")) %>%
# create the long format for ease of plotting
# not necessary to create individual figures (see code below)
mutate(`Eco-Reality` = as.numeric(`Eco-Reality`),
Type = factor(Type,levels=c("Donor\nEnvironment","Donor\nPhysiology","Transplanted\nMicrobiome","Transplant\nMethod","Recipient\nMicrobiome","Recipient\nEnvironment","Recipient\nPhysiology","Housing\nMethod")))  %>%
# this is needed bc of the NAs and NS from the new articles
# TODO rerun after all the data are added/verified
ggplot() +
geom_bar(aes(x = `Eco-Reality`,
fill = LabRodent.Recip)) +
facet_grid (`Eco-Reality Taxon Match` ~ Type, scales = "free_x",space = "free_x") +
theme(legend.position = "top",
strip.background=element_blank(),strip.text.x=element_text(size=25),
axis.title.y=element_text(hjust=0.5, vjust=1.5), panel.spacing = unit(1, "lines"),legend.text=element_text(size=14)) +
scale_fill_viridis(
name = "Recipient Taxon Type", breaks = c("LabRodent", "Other"),
labels = c("Lab Rodent", "Other"), alpha = 1, begin = 0, end = 1,
direction = 1, discrete = TRUE, option = "D"
) +
scale_x_continuous(breaks = function(x) pretty(x)[pretty(x) %% 1 == 0]) +
# https://stackoverflow.com/questions/15622001/how-to-display-only-integer-values-on-an-axis-using-ggplot2
ylab("Count")
df_Transplant %>%
dplyr::select(LabRodent.Recip, starts_with("Eco-Reality")) %>%
# select the relevant columns for the plotting function
gather(starts_with("Eco-Reality of"), key = "Type", value = "Eco-Reality") %>%
mutate(Type = str_remove(Type, "Eco-Reality of ")) %>%
mutate(Type = str_remove(Type, " \\(1-3\\)")) %>%
mutate(Type = str_remove(Type, " \\(1-5\\)")) %>%
mutate(Type = str_remove(Type, " \\(1-2\\)")) %>%
mutate(Type = str_replace(Type, " ", "\n")) %>%
# create the long format for ease of plotting
# not necessary to create individual figures (see code below)
mutate(`Eco-Reality` = as.numeric(`Eco-Reality`),
Type = factor(Type,levels=c("Donor\nEnvironment","Donor\nPhysiology","Transplanted\nMicrobiome","Transplant\nMethod","Recipient\nMicrobiome","Recipient\nEnvironment","Recipient\nPhysiology","Housing\nMethod")))  %>%
# this is needed bc of the NAs and NS from the new articles
# TODO rerun after all the data are added/verified
ggplot() +
geom_bar(aes(x = `Eco-Reality`,
fill = LabRodent.Recip)) +
facet_grid (`Eco-Reality Taxon Match` ~ Type, scales = "free_x",space = "free_x") +
theme(legend.position = "top",
strip.background=element_blank(),strip.text.x=element_text(size=15),strip.text.y=element_text(size=15)
axis.title.y=element_text(hjust=0.5, vjust=1.5), panel.spacing = unit(1, "lines"),legend.text=element_text(size=15)) +
scale_fill_viridis(
name = "Recipient Taxon Type", breaks = c("LabRodent", "Other"),
labels = c("Lab Rodent", "Other"), alpha = 1, begin = 0, end = 1,
direction = 1, discrete = TRUE, option = "D"
) +
scale_x_continuous(breaks = function(x) pretty(x)[pretty(x) %% 1 == 0]) +
# https://stackoverflow.com/questions/15622001/how-to-display-only-integer-values-on-an-axis-using-ggplot2
ylab("Count")
df_Transplant %>%
dplyr::select(LabRodent.Recip, starts_with("Eco-Reality")) %>%
# select the relevant columns for the plotting function
gather(starts_with("Eco-Reality of"), key = "Type", value = "Eco-Reality") %>%
mutate(Type = str_remove(Type, "Eco-Reality of ")) %>%
mutate(Type = str_remove(Type, " \\(1-3\\)")) %>%
mutate(Type = str_remove(Type, " \\(1-5\\)")) %>%
mutate(Type = str_remove(Type, " \\(1-2\\)")) %>%
mutate(Type = str_replace(Type, " ", "\n")) %>%
# create the long format for ease of plotting
# not necessary to create individual figures (see code below)
mutate(`Eco-Reality` = as.numeric(`Eco-Reality`),
Type = factor(Type,levels=c("Donor\nEnvironment","Donor\nPhysiology","Transplanted\nMicrobiome","Transplant\nMethod","Recipient\nMicrobiome","Recipient\nEnvironment","Recipient\nPhysiology","Housing\nMethod")))  %>%
# this is needed bc of the NAs and NS from the new articles
# TODO rerun after all the data are added/verified
ggplot() +
geom_bar(aes(x = `Eco-Reality`,
fill = LabRodent.Recip)) +
facet_grid (`Eco-Reality Taxon Match` ~ Type, scales = "free_x",space = "free_x") +
theme(legend.position = "top",
strip.background=element_blank(),strip.text.x=element_text(size=15),strip.text.y=element_text(size=15),
axis.title.y=element_text(hjust=0.5, vjust=1.5), panel.spacing = unit(1, "lines"),legend.text=element_text(size=15)) +
scale_fill_viridis(
name = "Recipient Taxon Type", breaks = c("LabRodent", "Other"),
labels = c("Lab Rodent", "Other"), alpha = 1, begin = 0, end = 1,
direction = 1, discrete = TRUE, option = "D"
) +
scale_x_continuous(breaks = function(x) pretty(x)[pretty(x) %% 1 == 0]) +
# https://stackoverflow.com/questions/15622001/how-to-display-only-integer-values-on-an-axis-using-ggplot2
ylab("Count")
df_Transplant %>%
dplyr::select(LabRodent.Recip, starts_with("Eco-Reality")) %>%
# select the relevant columns for the plotting function
gather(starts_with("Eco-Reality of"), key = "Type", value = "Eco-Reality") %>%
mutate(Type = str_remove(Type, "Eco-Reality of ")) %>%
mutate(Type = str_remove(Type, " \\(1-3\\)")) %>%
mutate(Type = str_remove(Type, " \\(1-5\\)")) %>%
mutate(Type = str_remove(Type, " \\(1-2\\)")) %>%
mutate(Type = str_replace(Type, " ", "\n")) %>%
# create the long format for ease of plotting
# not necessary to create individual figures (see code below)
mutate(`Eco-Reality` = as.numeric(`Eco-Reality`),
Type = factor(Type,levels=c("Donor\nEnvironment","Donor\nPhysiology","Transplanted\nMicrobiome","Transplant\nMethod","Recipient\nMicrobiome","Recipient\nEnvironment","Recipient\nPhysiology","Housing\nMethod")))  %>%
# this is needed bc of the NAs and NS from the new articles
# TODO rerun after all the data are added/verified
ggplot() +
geom_bar(aes(x = `Eco-Reality`,
fill = LabRodent.Recip)) +
facet_grid (`Eco-Reality Taxon Match` ~ Type, scales = "free_x",space = "free_x") +
theme(legend.position = "top",
strip.background=element_blank(),strip.text.x=element_text(size=15),strip.text.y=element_text(size=15),
axis.title.y=element_text(hjust=0.5, vjust=1.5),legend.text=element_text(size=15)) +
scale_fill_viridis(
name = "Recipient Taxon Type", breaks = c("LabRodent", "Other"),
labels = c("Lab Rodent", "Other"), alpha = 1, begin = 0, end = 1,
direction = 1, discrete = TRUE, option = "D"
) +
scale_x_continuous(breaks = function(x) pretty(x)[pretty(x) %% 1 == 0]) +
# https://stackoverflow.com/questions/15622001/how-to-display-only-integer-values-on-an-axis-using-ggplot2
ylab("Count")
df_Transplant %>%
dplyr::select(LabRodent.Recip, starts_with("Eco-Reality")) %>%
# select the relevant columns for the plotting function
gather(starts_with("Eco-Reality of"), key = "Type", value = "Eco-Reality") %>%
mutate(Type = str_remove(Type, "Eco-Reality of ")) %>%
mutate(Type = str_remove(Type, " \\(1-3\\)")) %>%
mutate(Type = str_remove(Type, " \\(1-5\\)")) %>%
mutate(Type = str_remove(Type, " \\(1-2\\)")) %>%
mutate(Type = str_replace(Type, " ", "\n")) %>%
# create the long format for ease of plotting
# not necessary to create individual figures (see code below)
mutate(`Eco-Reality` = as.numeric(`Eco-Reality`),
Type = factor(Type,levels=c("Donor\nEnvironment","Donor\nPhysiology","Transplanted\nMicrobiome","Transplant\nMethod","Recipient\nMicrobiome","Recipient\nEnvironment","Recipient\nPhysiology","Housing\nMethod")))  %>%
# this is needed bc of the NAs and NS from the new articles
# TODO rerun after all the data are added/verified
ggplot() +
geom_bar(aes(x = `Eco-Reality`,
fill = LabRodent.Recip)) +
facet_grid (`Eco-Reality Taxon Match` ~ Type, scales = "free_x",space = "free_x") +
theme(legend.position = "top",
strip.background=element_blank(),strip.text.x=element_text(size=14),strip.text.y=element_text(size=14),
axis.title.y=element_text(hjust=0.5, vjust=1.5),legend.text=element_text(size=15)) +
scale_fill_viridis(
name = "Recipient Taxon Type", breaks = c("LabRodent", "Other"),
labels = c("Lab Rodent", "Other"), alpha = 1, begin = 0, end = 1,
direction = 1, discrete = TRUE, option = "D"
) +
scale_x_continuous(breaks = function(x) pretty(x)[pretty(x) %% 1 == 0]) +
# https://stackoverflow.com/questions/15622001/how-to-display-only-integer-values-on-an-axis-using-ggplot2
ylab("Count")
setwd("/home/chrisgg/Documents/Guelph/Microbiome/meta_transplant_microbiome/")
theme_simple <- function() {
theme_grey() %+replace%
theme(
axis.line = element_line(colour = "black"),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank(),
axis.title = element_text(size = 28, face = "bold"),
axis.text.x = element_text(size = 15, colour = "Black"),
axis.text.y = element_text(size = 15, colour = "Black"),
axis.ticks.length = unit(0.25, "cm"),
axis.ticks = element_line(size = 0.5, colour = "Black"),
panel.border = element_rect(fill = FALSE, size = 0.5),
legend.title = element_text(size = 15),
legend.key = element_blank()
)
}
library("tidyverse")
theme_set(theme_simple())
library(viridis)
library(googlesheets)
# + scale_color/fill_viridis(discrete = T/F)
# theme_set(theme_light())
# Startup ends here
## Read in data -----
df_Transplant <- gs_url("https://docs.google.com/spreadsheets/d/1WhRjoIFJWAAGvsFNHbrf2GZp8K6pNtxoudrhZ6h82ZM/edit") %>%
# create unique identifyer
gs_read() %>%
# reads the data into R
write_csv(paste(Sys.Date(), "Microbiome_Literature_Summaries.csv"))
# and automatically create timestamped .csv for safety and repeatability
## execute line below if you want to repeat analysis from a certain date
# df_Transplant = read_csv("2018-11-20 Microbiome_Literature_Summaries.csv")
attr(df_Transplant, "CreatedOn") <- Sys.Date()
# add the same date as an attribute to the R object
glimpse(df_Transplant)
str(df_Transplant) # check last line for date attribute
## Data wrangling -----
summary(df_Transplant)
## create lookup table more programmatically
recipients <- df_Transplant %>%
dplyr::select(`Recipient Taxon`) %>%
unique() %>%
arrange(`Recipient Taxon`) %>%
pull()
recipients # check which are rodents
labrodents <- c("Mice", "mice", "mouse", "rat", "rats")
recipients <- tibble(`Recipient Taxon` = recipients) %>%
mutate(LabRodent.Recip = ifelse(`Recipient Taxon` %in% labrodents, "LabRodent", "Other"))
recipients %>% View()
# TODO: after new import, check the above line if new recipient were added
# TODO: if necessary, adjust labrodent vector
## create new column with lookup table and left_join
df_Transplant <- left_join(df_Transplant, recipients, by = "Recipient Taxon")
df_Transplant %>%
dplyr::select(`Recipient Taxon`, LabRodent.Recip) %>%
View()
View(df_Transplant)
